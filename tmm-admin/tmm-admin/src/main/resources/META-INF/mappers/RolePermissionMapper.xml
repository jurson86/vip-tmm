<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tuandai.transaction.repository.RolePermissionMapper" >
  <resultMap id="BaseResultMap" type="com.tuandai.transaction.domain.RolePermission" >
    <id column="pid" property="pid" jdbcType="INTEGER" />
    <result column="application_id" property="applicationId" jdbcType="INTEGER" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    pid, application_id, role_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_role_permission
    where pid = #{pid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_role_permission
    where pid = #{pid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.tuandai.transaction.domain.RolePermission" >
    insert into t_role_permission (pid, application_id, role_id
      )
    values (#{pid,jdbcType=INTEGER}, #{applicationId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.tuandai.transaction.domain.RolePermission" >
    insert into t_role_permission
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="pid != null" >
        pid,
      </if>
      <if test="applicationId != null" >
        application_id,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="pid != null" >
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="applicationId != null" >
        #{applicationId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tuandai.transaction.domain.RolePermission" >
    update t_role_permission
    <set >
      <if test="applicationId != null" >
        application_id = #{applicationId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
    </set>
    where pid = #{pid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tuandai.transaction.domain.RolePermission" >
    update t_role_permission
    set application_id = #{applicationId,jdbcType=INTEGER},
      role_id = #{roleId,jdbcType=INTEGER}
    where pid = #{pid,jdbcType=INTEGER}
  </update>

  <resultMap id="permission" type="com.tuandai.transaction.domain.Application" >
    <id column="pid" property="pid" jdbcType="INTEGER" />
    <result column="application_name" property="applicationName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>

  <select id="findRolePermissions" resultMap="permission" parameterType="java.lang.Integer" >
    SELECT
      E.APPLICATION_NAME,
      E.PID
      FROM
    T_ROLE C
      INNER JOIN T_ROLE_PERMISSION D ON C.PID = D.ROLE_ID
      INNER JOIN T_APPLICATION E ON E.PID = D.APPLICATION_ID
    WHERE
      1 = 1
    AND C.PID = #{roleId}
  </select>

  <select id="findUserPermissions" resultMap="permission" parameterType="map" >
    SELECT DISTINCT
      E.PID,
      E.APPLICATION_NAME,
      E.CREATE_TIME,
      E.UPDATE_TIME
    FROM
    (
      SELECT
        D.application_id
      FROM
      T_USER A
      INNER JOIN T_ROLE_USER B ON A.PID = B.USER_ID
      INNER JOIN T_ROLE C ON B.ROLE_ID = C.PID
      INNER JOIN T_ROLE_PERMISSION D ON C.PID = D.ROLE_ID
      WHERE
      1 = 1
      <if test="map.userId!=null">
        AND A.PID = #{map.userId}
      </if>
    ) A  INNER JOIN T_APPLICATION E ON A.application_id = E.PID
      WHERE
        1 = 1
      <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(map.applicationName)">
        AND E.APPLICATION_NAME like CONCAT('%#',#{map.applicationName},'%')  ESCAPE '#'
      </if>

  </select>

  <insert id="insertBatch" parameterType="java.util.List">
    insert into t_role_permission ( role_id, application_id
    )

    values
    <foreach collection="list" separator=" , "  item="rolePermission">
      (
      #{rolePermission.roleId},
      #{rolePermission.applicationId}
      )
    </foreach>
  </insert>

  <delete id="deleteRolePermissionRealate" >
    delete from t_role_permission
    where
    1=1
    <if test="roleId != null" >
      AND role_Id = #{roleId,jdbcType=INTEGER}
    </if>
    <if test="applicationId != null" >
      AND application_Id = #{applicationId,jdbcType=INTEGER}
    </if>
  </delete>

</mapper>