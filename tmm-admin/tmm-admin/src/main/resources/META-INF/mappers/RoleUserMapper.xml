<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tuandai.transaction.repository.RoleUserMapper" >
  <resultMap id="BaseResultMap" type="com.tuandai.transaction.domain.RoleUser" >
    <id column="pid" property="pid" jdbcType="INTEGER" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    pid, role_id, user_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_role_user
    where pid = #{pid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_role_user
    where pid = #{pid,jdbcType=INTEGER}
  </delete>

  <delete id="deleteRoleRealate" parameterType="java.lang.Integer" >
    delete from t_role_user
    where
    1=1
    <if test="userId != null" >
      AND user_id = #{userId,jdbcType=INTEGER}
    </if>
    <if test="roleId != null" >
      AND role_id = #{roleId,jdbcType=INTEGER}
    </if>
  </delete>

  <insert id="insert" parameterType="com.tuandai.transaction.domain.RoleUser" >
    insert into t_role_user (pid, role_id, user_id
      )
    values (#{pid,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.tuandai.transaction.domain.RoleUser" >
    insert into t_role_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="pid != null" >
        pid,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="pid != null" >
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tuandai.transaction.domain.RoleUser" >
    update t_role_user
    <set >
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where pid = #{pid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tuandai.transaction.domain.RoleUser" >
    update t_role_user
    set role_id = #{roleId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER}
    where pid = #{pid,jdbcType=INTEGER}
  </update>

  <resultMap id="role" type="com.tuandai.transaction.domain.Role" >
    <id column="pid" property="pid" jdbcType="INTEGER" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>

  <select id="findUserRoles" resultMap="role" parameterType="java.lang.Integer" >
    select
      C.PID,
      C.ROLE_NAME
    FROM
      T_USER A
      INNER JOIN T_ROLE_USER B ON A.PID = B.USER_ID
      INNER JOIN T_ROLE C ON B.ROLE_ID = C.PID
    WHERE
    1 = 1
    AND A.PID = #{userId,jdbcType=INTEGER}
  </select>

  <insert id="insertBatch" parameterType="java.util.List">
    insert into t_role_user ( role_id, user_id
    )

    values
    <foreach collection="list" separator=" , "  item="roleUser">
      (
      #{roleUser.roleId},
      #{roleUser.userId}
      )
    </foreach>
  </insert>

</mapper>